{
  "plugins": ["cypress", "chai-friendly", "@typescript-eslint", "mocha", "ban"],
  "extends": [
    "@nazarkulyk/esnext",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:chai-friendly/recommended",
    "plugin:cypress/recommended",
    "prettier",
    "plugin:mocha/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "ban/ban": [
      "error",
      {
        "name": ["cy", "as"],
        "message": "Do not use this command. Instead use our custom cy.setAlias command"
      }
    ],
    "cypress/no-force": "error",
    "cypress/assertion-before-screenshot": "error",
    // Can't get the configuration to work it seems and don't really care much, typescript checks it for us
    "import/no-unresolved": "off",
    // Use the typescript one
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    // arrow functions is fine
    "@typescript-eslint/no-empty-function": "off",
    // We don't prefer default export
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    // Avoid the conflicts between a mocha rule and prefer-arrow-callback
    "prefer-arrow-callback": "off",
    "mocha/prefer-arrow-callback": "error",
    "no-invalid-this": "off",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"]
  },
  "globals": { "Parameters": false, "ReturnType": false },
  "ignorePatterns": ["*.d.ts", "forked_modules"],
  "parserOptions": { "ecmaVersion": 2021, "project": "./tsconfig.json" }
}
