name: Fail If Not Authorized For Using Secrets
description: Checks whether an event can be trusted with secrets, and fails if it can't
outputs:
  unsafe-ref-to-checkout:
    description: >
      The ref to pass to actions/checkout@v2 to do an unsafe checkout of
      the code in the PR (or a push to main but in that case it's safe)
    value: ${{ steps.ref-getter.outputs.ref }}
runs:
  using: "composite"
  steps:
    - name: >
        Log all the parts of the check for debugging purposes, and verifying we are
        only letting trusted code run with our secrets
      shell: bash
      run: |
        echo "HERE AT THE START IS THE WHOLE EVENT THAT IS A BIT SPAMMY. LOOK AT BOTTOM
        FOR MORE CURATED DEBUG INFO"
        echo
        echo
        echo
        echo "Whole event: ${{ toJSON(github.event) }}"
        echo
        echo
        echo
        echo "ABOVE THIS WAS THE SPAM OF THE WHOLE EVENT, UNDER HERE IS MORE CURATED DEBUG INFO"
        echo
        echo
        echo
        echo "Event name: ${{ github.event_name }}"
        echo "Event Action : ${{ github.event.action }}"
        echo "Github Ref: ${{ github.ref }}"
        echo "PR Author Association: ${{ github.event.pull_request.author_association }}"
        echo "Review Comment Author Association: ${{ github.event.comment.author_association }}"
        echo "Review Comment Body: ${{ github.event.comment.body }}"

    - name: Return Non-Zero Exit Code If Untrusted
      shell: bash
      run: >
        RED='\033[0;31m'

        [[
          (
            '${{ github.event_name }}' == 'push' && '${{ github.ref }}' == 'refs/heads/main'
          ) ||
          (
            '${{ github.event_name }}' == 'pull_request_target' &&
            '${{ github.event.pull_request.author_association }}' == 'OWNER'
          ) ||
          (
            '${{ github.event_name }}' == 'pull_request_review_comment' &&
            '${{ github.event.comment.author_association }}' == 'OWNER' &&
            '${{ github.event.comment.body }}' == '&RUN_TESTS_WITH_SECRETS'
          )
        ]] ||
        (
          echo -e "${RED}This code change is not authorized to be run with our secrets such
          as logins and API keys. In order to get this code run, you must get an owner to
          verify that your code change has no malicious parts in it and use the comment
          command to execute a run of these tests" &&
          exit 1
        )

    - name: Get ref to checkout
      id: ref-getter
      shell: bash
      run: >
        REF=$(
          (

            [[
              '${{ github.event_name }}' == 'push'
            ]] &&
            echo -n '${{ github.ref }}'
          ) ||
          (
            echo -n '${{ github.event.pull_request.head.sha }}'
          )
        )

        echo "::set-output name=ref::$REF"
