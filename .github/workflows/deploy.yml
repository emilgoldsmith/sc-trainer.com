name: CD
on:
  workflow_dispatch: {}
  push:
    branches: main

permissions: {}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    permissions: read-all
    # Skip if this was a dependabot push, as we don't want to spam deploys
    # for small dependency upgrades. If we need a dependency upgrade in production
    # just use the workflow dispatch manual trigger after CI passed

    # Also skip if there is a no-deploy tag in the commit message
    if: ${{ github.event.sender.login != 'dependabot[bot]' || ! startsWith(github.event.commits[0].message, '[no-deploy]') }}
    env:
      SERVICE: speedcubing-trainer
      REGION: us-east4
      DOCKER_HUB_TAG: sctrainer/main:production-${{ github.sha }}
      PROJECT_ID: carbide-ether-306312
      # Remember to update project id here if you update the variable above
      GOOGLE_TAG: us-east4-docker.pkg.dev/carbide-ether-306312/speedcubing-trainer/main:${{ github.sha }}
    steps:
      - name: Wait for CI to pass
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: emilgoldsmith/wait-for-workflows-to-succeed@v1.7
        with:
          wait-interval-seconds: 30
          wait-max-seconds: 500
          workflows: |
            ci.yml
            build-and-push-docker-containers.yml
          repo-token: ${{ github.token }}

      - name: Pull our production image
        run: docker pull ${{ env.DOCKER_HUB_TAG }}

      - name: Retag our production image to Google format
        run: docker image tag ${{ env.DOCKER_HUB_TAG }} ${{ env.GOOGLE_TAG }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_CLOUD_DEPLOY_SA_KEY }}
          export_default_credentials: true # Set to true to authenticate the Cloud Run action

      - name: Configure and Authorize Docker For Pushing to Google
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Push Image to the Artifacts Registry
        run: docker push ${{ env.GOOGLE_TAG }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.6.0
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.GOOGLE_TAG }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
