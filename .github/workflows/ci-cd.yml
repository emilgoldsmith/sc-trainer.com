name: CI and CD
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-docker-containers:
    name: Build And Push Docker Containers
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push CI image
        uses: docker/build-push-action@v2
        with:
          push: true
          target: ci
          tags: sctrainer/main:ci-${{ github.sha }}

      - name: Build and Push CI Browsers image
        uses: docker/build-push-action@v2
        with:
          push: true
          target: ci-browsers
          tags: sctrainer/main:ci-browsers-${{ github.sha }}

      - name: Build and Push Production image
        uses: docker/build-push-action@v2
        with:
          push: true
          target: production
          tags: sctrainer/main:production-${{ github.sha }}

  lint-and-unit-test:
    name: "Linting And Unit Tests"
    runs-on: ubuntu-20.04
    container: sctrainer/main:ci-${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  cypress-end-to-end-tests:
    name: "${{ matrix.platform.browserString }} on screen size of ${{ matrix.sizeRelevant.deviceName }} Linux Cypress E2E Tests"
    runs-on: ubuntu-20.04
    container:
      image: sctrainer/main:ci-browsers-${{ github.sha }}
      # This is needed for Firefox running as described here
      # https://github.com/cypress-io/github-action/issues/104
      options: --user 1001
    needs: build-docker-containers
    env:
      PORT: 8080
    services:
      sctrainer-server:
        image: sctrainer/main:production-${{ github.sha }}
        env:
          PORT: ${{ env.PORT }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - browser: chrome
            browserString: Chrome
          - browser: firefox
            browserString: Firefox
        # Values for devices taken from https://docs.cypress.io/api/commands/viewport#Arguments
        sizeRelevant:
          - viewportConfig: "viewportWidth=1280,viewportHeight=800"
            # We include the dynamic viewports just one place as it doesn't matter what initial
            # viewport size it is so no need to include it several times
            extraSpecs: [cypress/tests/uses-dynamic-viewports/*]
            deviceName: Macbook 13
          - viewportConfig: "viewportWidth=375,viewportHeight=667"
            extraSpecs: []
            deviceName: iPhone 8
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: end-to-end-tests

      - name: Install Cypress
        run: yarn run cypress install
        working-directory: end-to-end-tests

      - name: Log Cypress Info
        run: npx cypress info
        working-directory: end-to-end-tests

      - name: Run Cypress Tests
        working-directory: end-to-end-tests
        run: |
          yarn run cypress run \
          --browser ${{ matrix.platform.browser }} \
          --config "${{ matrix.sizeRelevant.viewportConfig }},baseUrl=http://sctrainer-server:${{ env.PORT }}" \
          --spec cypress/tests/*,${{ matrix.sizeRelevant.extraSpecs[0] }},${{ matrix.sizeRelevant.extraSpecs[1] }},${{ matrix.sizeRelevant.extraSpecs[2] }}

      - name: Upload recorded videos
        uses: actions/upload-artifact@v1
        if: always()
        continue-on-error: true
        with:
          name: VIDEOS-cypress-${{ matrix.platform.browser }}-${{ matrix.sizeRelevant.deviceName }}-${{ github.sha }}
          path: cypress/videos

      - name: Upload recorded Screenshots
        uses: actions/upload-artifact@v1
        if: always()
        continue-on-error: true
        with:
          name: SCREENSHOTS-cypress-${{ matrix.platform.browser }}-${{ matrix.sizeRelevant.deviceName }}-${{ github.sha }}
          path: cypress/screenshots

  deploy:
    # We only deploy if it's the main branch and they were a success
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    # Important to keep this up to date, depending on all jobs
    needs: [cypress-end-to-end-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: python scripts/trigger-deploy.py
        env:
          SECRET: ${{ secrets.GOOGLE_CLOUD_DEPLOY_SECRET }}
          API_KEY: ${{ secrets.GOOGLE_CLOUD_DEPLOY_API_KEY }}
