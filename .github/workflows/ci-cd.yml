name: CI and CD
on: push

jobs:
  cypress-end-to-end-tests:
    name: "${{ matrix.platform.browserString }} on ${{ matrix.sizeRelevant.deviceName }} Cypress E2E Tests"
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - browser: chrome
            os: ubuntu-latest
            browserString: Chrome
          - browser: firefox
            os: ubuntu-latest
            browserString: Firefox
          - browser: edge
            os: windows-latest
            browserString: Microsoft Edge
        # Values for devices taken from https://docs.cypress.io/api/commands/viewport#Arguments
        sizeRelevant:
          - viewportConfig: "viewportWidth=1280,viewportHeight=800"
            # We include the dynamic viewports just one place as it doesn't matter what initial
            # viewport size it is so no need to include it several times
            extraSpecs: [cypress/tests/uses-dynamic-viewports/*]
            deviceName: Macbook 13
          - viewportConfig: "viewportWidth=375,viewportHeight=667"
            extraSpecs: []
            deviceName: iPhone 8
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Switch docker mode to Linux containers for Windows
        if: ${{ startsWith(matrix.platform.os, 'windows') }}
        run: find . DockerCli.exe

      - name: Build
        run: docker build -t sc-trainer:${{ github.sha }} --target production .

      - name: Start server
        run: docker run -e PORT=8080 -p 8080:8080 -d --name="sc-trainer-server" sc-trainer:${{ github.sha}}

      - name: Cypress Run
        uses: cypress-io/github-action@v2.9.11
        with:
          working-directory: end-to-end-tests
          browser: ${{ matrix.platform.browser }}
          config: "${{ matrix.sizeRelevant.viewportConfig }},baseUrl=http://localhost:8080"
          wait-on: "http://localhost:8080"
          spec: |
            cypress/tests/*
            ${{ matrix.sizeRelevant.extraSpecs[0] }}
            ${{ matrix.sizeRelevant.extraSpecs[1] }}
            ${{ matrix.sizeRelevant.extraSpecs[2] }}
          # For debugging purposes log all the installed browsers and OS info
          build: npx cypress info
        env:
          # This allows the action to determine the unique run id
          # which is necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Stop server
        run: docker stop sc-trainer-server

  deploy:
    # We only deploy if it's the main branch and they were a success
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    # Important to keep this up to date, depending on all jobs
    needs: [cypress-end-to-end-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: python scripts/trigger-deploy.py
        env:
          SECRET: ${{ secrets.GOOGLE_CLOUD_DEPLOY_SECRET }}
          API_KEY: ${{ secrets.GOOGLE_CLOUD_DEPLOY_API_KEY }}
